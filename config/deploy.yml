service: rcal

image: yukibukiyou/rcal

servers:
  web:
    - 198.13.33.193

proxy:
  ssl: true
  hosts:
    - rcal.ykpythemind.com

registry:
  username: yukibukiyou

  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  secret:
    - RAILS_MASTER_KEY
  clear:
    HOST: rcal.ykpythemind.com

    SOLID_QUEUE_IN_PUMA: true

    # Set number of processes dedicated to Solid Queue (default: 1)
    # JOB_CONCURRENCY: 3

    # Set number of cores available to the application on each server (default: 1).
    WEB_CONCURRENCY: 1

    # Match this to any external database server to configure Active Record correctly
    # Use rcal-db for a db accessory server on same machine via local kamal docker network.
    # DB_HOST: 192.168.0.2

    RAILS_LOG_LEVEL: info

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"


# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - "rcal_storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64

ssh:
  user: linuxuser
